include "taxonomy.diaspec";
//------------------------------------------------------
//                   CONTROLLER
//------------------------------------------------------
controller AlarmActivitedController {
  when provided InsideContext
    do ScheduleTimer on Timer,
       SendNonCriticalNotification on Notifier;  
}
controller LampAlarmSuccessController{
  when provided LunchAlarmContext
    do ScheduleTimer on Timer;
}
controller LampSuccessController{
  when provided LunchAlarmContext
    do On on Light, 
       Off on Light;
  when provided InsideContext
  	do On on Light,
  	   Off on Light;
}

// A regrouper avec LampAlarmSuccess ?
controller LunchAlarmController{
  when provided LunchAlarmContext
    do SendMessage on Messenger,
    	   SendCriticalNotification on Notifier,//Remplace activation de l'alarme
    	   ScheduleTimer on Timer;
}
controller ResetAlarmController{
  when provided TimeOver
    do SendNonCriticalNotification on Notifier,
       ScheduleTimer on Timer;
}

//------------------------------------------------------
//                    CONTEXT
//------------------------------------------------------
//Permet de savoir si on est INSIDE ou OUTSIDE
context InsideContext as Boolean {
  when provided inactivityLevel from InactivitySensor
  get lastInteraction from InactivitySensor
  maybe publish;
}

context LunchAlarmContext as Boolean {
  when provided Password // =true
  always publish;

  when provided timerTriggered from Timer
  get timerTriggered from Timer
  maybe publish;
}

context Password as Boolean {
    when provided on from Appliance
    get on from Appliance, contact from ContactSensor
    always publish;
}

context TimeOver as Boolean {
  when provided timerTriggered from Timer
  get timerTriggered from Timer
  maybe publish;
}


 
